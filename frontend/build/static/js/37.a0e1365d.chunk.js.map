{"version":3,"sources":["pages/other/spinner.js","pages/other/Otp-login.js"],"names":["spinner","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","LoginRegister","location","useState","loading","setLoading","addToast","useToasts","pathname","history","useHistory","useForm","register","handleSubmit","trigger","errors","formState","onSubmit","data","a","phone","Phone","config","headers","axios","post","appearance","autoDismiss","push","response","name","content","to","process","LayoutOne","headerTop","Breadcrumb","className","Tab","Container","defaultActiveKey","Nav","variant","Item","Link","eventKey","Content","Pane","autoComplete","type","placeholder","maxLength","required","pattern","value","message","onKeyUp","OTP"],"mappings":"sSAqBeA,MAlBf,WACE,OACF,kBAAC,IAAD,CACEC,OAAQ,GACRC,MAAO,GACPC,MAAM,QACNC,aAAc,GACdC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KC4HTC,UA7HO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACRC,oBAAS,GADD,mBAC/BC,EAD+B,KACtBC,EADsB,KAE9BC,EAAaC,sBAAbD,SACAE,EAAaN,EAAbM,SACFC,EAAUC,cAJsB,EAUlCC,cAJFC,EANoC,EAMpCA,SACAC,EAPoC,EAOpCA,aACAC,EARoC,EAQpCA,QACaC,EATuB,EASpCC,UAAaD,OAGTE,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACTC,EAAQF,EAAKG,MACnBhB,GAAW,GAFI,SAIPiB,EAAS,CACbC,QAAS,CACP,eAAgB,qBANP,SASUC,IAAMC,KAC3B,qBACA,CAAEL,SACFE,GAZW,gBASLJ,EATK,EASLA,KAKRb,GAAW,GACXC,EAASY,EAAM,CAAEQ,WAAY,UAAYC,aAAa,IACtDlB,EAAQmB,KAAR,kCAAwCR,IAhB3B,kDAkBbf,GAAW,GACXC,EAAS,KAAMuB,SAASX,KAAM,CAAEQ,WAAY,QAAUC,aAAa,IAnBtD,0DAAH,sDAuBd,OACE,kBAAC,gBAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,sDACA,0BACEG,KAAK,cACLC,QAAQ,wCAGZ,kBAAC,kBAAD,CAAiBC,GAA6B,KAA9C,QAGA,kBAAC,kBAAD,CAAiBA,GAAIC,GAAyBzB,GAA9C,aAGA,kBAAC0B,EAAA,EAAD,CAAWC,UAAU,WAEnB,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,0BACb,kBAACC,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,OAC9B,kBAACC,EAAA,EAAD,CAAKC,QAAQ,QAAQL,UAAU,2BAC7B,kBAACI,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,OACjB,4CAIN,kBAACP,EAAA,EAAIQ,QAAL,KACE,kBAACR,EAAA,EAAIS,KAAL,CAAUF,SAAS,OACjB,yBAAKR,UAAU,wBACb,yBAAKA,UAAU,uBACb,0BAAMpB,SAAUJ,EAAaI,IAC3B,yCACE+B,aAAa,MACbC,KAAK,cACLC,YAAY,oCACZC,UAAU,MACNvC,EAAS,QAAS,CACpBwC,SAAU,4BACVC,QAAS,CACPC,MACE,mDACFC,QAAS,0BAVf,CAaEC,QAAS,WACP1C,EAAQ,aAGXC,EAAO0C,KACN,2BAAOpB,UAAU,eACdtB,EAAO0C,IAAIF,SAIhB,yBAAKlB,UAAU,cACb,yBAAKA,UAAU,qBACf,4BAAQY,KAAK,UACX,8BACG,IACA7C,EAAU,kBAAC,EAAD,MAAc","file":"static/js/37.a0e1365d.chunk.js","sourcesContent":["import { Oval } from  'react-loader-spinner'\r\nimport React from 'react'\r\n\r\nfunction spinner() {\r\n  return (\r\n<Oval\r\n  height={10}\r\n  width={30}\r\n  color=\"white\"\r\n  wrapperStyle={{}}\r\n  wrapperClass=\"\"\r\n  visible={true}\r\n  ariaLabel='oval-loading'\r\n  secondaryColor=\"#A749FF\"\r\n  strokeWidth={2}\r\n  strokeWidthSecondary={2}\r\n\r\n/>\r\n  )\r\n}\r\n\r\nexport default spinner\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./spinner\";\r\n\r\nconst LoginRegister = ({ location }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    const phone = data.Phone;\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user/otpLogin\",\r\n        { phone },\r\n        config\r\n      );\r\n      setLoading(false);\r\n      addToast(data, { appearance: \"success\" , autoDismiss: true,});\r\n      history.push(`/Otp-login-verification/${phone}`);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      addToast(error.response.data, { appearance: \"error\" , autoDismiss: true,});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <Fragment>\r\n        <MetaTags>\r\n          <title>Thepaaki| OTP-Login</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Otp Login page of thepaaki website\"\r\n          />\r\n        </MetaTags>\r\n        <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>\r\n          Home\r\n        </BreadcrumbsItem>\r\n        <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n          OTP-LOGIN\r\n        </BreadcrumbsItem>\r\n        <LayoutOne headerTop=\"visible\">\r\n          {/* breadcrumb */}\r\n          <Breadcrumb />\r\n          <div className=\"login-register-area pt-100 pb-100\">\r\n            <div className=\"container mt-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\r\n                  <div className=\"login-register-wrapper\">\r\n                    <Tab.Container defaultActiveKey=\"otp\">\r\n                      <Nav variant=\"pills\" className=\"login-register-tab-list\">\r\n                        <Nav.Item>\r\n                          <Nav.Link eventKey=\"otp\">\r\n                            <h4>OTP-LOGIN</h4>\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                      <Tab.Content>\r\n                        <Tab.Pane eventKey=\"otp\">\r\n                          <div className=\"login-form-container\">\r\n                            <div className=\"login-register-form\">\r\n                              <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <input\r\n                                  autoComplete=\"off\"\r\n                                  type=\"phoneNumber\"\r\n                                  placeholder=\"Enter Your Registed Phone Number \"\r\n                                  maxLength=\"10\"\r\n                                  {...register(\"Phone\", {\r\n                                    required: \"Please Enter Phone Number\",\r\n                                    pattern: {\r\n                                      value:\r\n                                        /^[(]?[0-9]{3}[)]?[-\\s]?[0-9]{3}[-\\s]?[0-9]{4,6}$/,\r\n                                      message: \"Invalid Phone Number\",\r\n                                    },\r\n                                  })}\r\n                                  onKeyUp={() => {\r\n                                    trigger(\"Phone\");\r\n                                  }}\r\n                                />\r\n                                {errors.OTP && (\r\n                                  <small className=\"text-danger\">\r\n                                    {errors.OTP.message}\r\n                                  </small>\r\n                                )}\r\n\r\n                                <div className=\"button-box\">\r\n                                  <div className=\"login-toggle-btn\"></div>\r\n                                  <button type=\"submit\">\r\n                                    <span>\r\n                                      {\" \"}\r\n                                      {loading ? <Loading /> : \"Login\"}\r\n                                    </span>\r\n                                  </button>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </Tab.Pane>\r\n                      </Tab.Content>\r\n                    </Tab.Container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutOne>\r\n      </Fragment>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nLoginRegister.propTypes = {\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"sourceRoot":""}