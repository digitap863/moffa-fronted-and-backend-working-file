{"version":3,"sources":["pages/other/Wishlist.js"],"names":["connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","user","userData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","location","useToasts","pathname","name","content","to","process","headerTop","className","length","map","wishlistItem","key","offer","finalProductPrice","finalDiscountedPrice","date","Date","toLocaleDateString","Deal","items","data","discountedPrice","getDiscountPrice","price","discount","wholesaler","cartItem","filter","id","src","image","url","alt","affiliateLink","href","rel","target","variation","stock","onClick","undefined","quantity","disabled","title"],"mappings":"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","file":"static/js/39.a4d14e72.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\n\r\nconst Wishlist = ({\r\n  location,\r\n  cartItems,\r\n  currency,\r\n  user,\r\n  addToCart,\r\n  wishlistItems,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n}) => {\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Thepaaki | Wishlist</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Wishlist page of thepaaki website \"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Wishlist\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"cart-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {wishlistItems && wishlistItems.length >= 1 ? (\r\n              <Fragment>\r\n                <h3 className=\"cart-page-title\">Your wishlist items</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-content table-responsive cart-table-content\">\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Product Name</th>\r\n                            <th>Unit Price</th>\r\n                            <th>Add To Cart</th>\r\n                            <th>action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {wishlistItems.map((wishlistItem, key) => {\r\n                            var offer;\r\n                            const date = new Date().toLocaleDateString();\r\n                            wishlistItem.Deal.map((items) => {\r\n                              if (items.date == date) {\r\n                                offer = items.offer;\r\n                              }\r\n                              if (items.data < date) {\r\n                                deleteFromWishlist(wishlistItem,addToast);\r\n                              }\r\n                            });\r\n                            if (offer) {\r\n                              var discountedPrice = getDiscountPrice(\r\n                                wishlistItem.price,\r\n                                offer\r\n                              );\r\n                            } else {\r\n                              if (wishlistItem.discount) {\r\n                                var discountedPrice = getDiscountPrice(\r\n                                  wishlistItem.price,\r\n                                  wishlistItem.discount\r\n                                );\r\n                              } else {\r\n                                var discountedPrice = null;\r\n                              }\r\n                            }\r\n\r\n                            let finalProductPrice;\r\n                            let finalDiscountedPrice;\r\n                            if (user?.user == true || user?.user == null) {\r\n                              finalProductPrice = wishlistItem.price;\r\n                              finalDiscountedPrice = discountedPrice;\r\n                            } else {\r\n                              finalProductPrice = wishlistItem.price;\r\n                              finalDiscountedPrice = wishlistItem.wholesaler;\r\n                            }\r\n                            const cartItem = cartItems.filter(\r\n                              (item) => item.id === wishlistItem.id\r\n                            )[0];\r\n                            return (\r\n                              <tr key={key}>\r\n                                <td className=\"product-thumbnail\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      wishlistItem.id\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      className=\"img-fluid\"\r\n                                      src={wishlistItem.image[0].url}\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-name text-center\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      wishlistItem.id\r\n                                    }\r\n                                  >\r\n                                    {wishlistItem.name}\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  {discountedPrice !== null ? (\r\n                                    <Fragment>\r\n                                      <span className=\"amount old\">\r\n                                        {\"â‚¹\" + finalProductPrice}\r\n                                      </span>\r\n                                      <span className=\"amount\">\r\n                                        {\"â‚¹\" + finalDiscountedPrice}\r\n                                      </span>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <span className=\"amount\">\r\n                                      {\"â‚¹\" + finalProductPrice}\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className=\"product-wishlist-cart\">\r\n                                  {wishlistItem.affiliateLink ? (\r\n                                    <a\r\n                                      href={wishlistItem.affiliateLink}\r\n                                      rel=\"noopener noreferrer\"\r\n                                      target=\"_blank\"\r\n                                    >\r\n                                      {\" \"}\r\n                                      Buy now{\" \"}\r\n                                    </a>\r\n                                  ) : wishlistItem.variation &&\r\n                                    wishlistItem.variation.length >= 1 ? (\r\n                                    <Link\r\n                                      to={`${process.env.PUBLIC_URL}/product/${wishlistItem.id}`}\r\n                                    >\r\n                                      Select option\r\n                                    </Link>\r\n                                  ) : wishlistItem.stock &&\r\n                                    wishlistItem.stock > 0 ? (\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        addToCart(wishlistItem, addToast)\r\n                                      }\r\n                                      className={\r\n                                        cartItem !== undefined &&\r\n                                        cartItem.quantity > 0\r\n                                          ? \"active\"\r\n                                          : \"\"\r\n                                      }\r\n                                      disabled={\r\n                                        cartItem !== undefined &&\r\n                                        cartItem.quantity > 0\r\n                                      }\r\n                                      title={\r\n                                        wishlistItem !== undefined\r\n                                          ? \"Added to cart\"\r\n                                          : \"Add to cart\"\r\n                                      }\r\n                                    >\r\n                                      {cartItem !== undefined &&\r\n                                      cartItem.quantity > 0\r\n                                        ? \"Added\"\r\n                                        : \"Add to cart\"}\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button disabled className=\"active\">\r\n                                      Out of stock\r\n                                    </button>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className=\"product-remove\">\r\n                                  <button\r\n                                    onClick={() =>\r\n                                      deleteFromWishlist(wishlistItem, addToast)\r\n                                    }\r\n                                  >\r\n                                    <i className=\"fa fa-times\"></i>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"cart-shiping-update-wrapper\">\r\n                      <div className=\"cart-shiping-update\">\r\n                        <Link\r\n                          to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}\r\n                        >\r\n                          Continue Shopping\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"cart-clear\">\r\n                        <button onClick={() => deleteAllFromWishlist(addToast)}>\r\n                          Clear Wishlist\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-like\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      No items found in wishlist <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\r\n                        Add Items\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nWishlist.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteAllFromWishlist: PropTypes.func,\r\n  deleteFromWishlist: PropTypes.func,\r\n  wishlistItems: PropTypes.array,\r\n  user: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    currency: state.currencyData,\r\n    user: state.userData.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    addToWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(addToWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteFromWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteAllFromWishlist: (addToast) => {\r\n      dispatch(deleteAllFromWishlist(addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);\r\n"],"sourceRoot":""}