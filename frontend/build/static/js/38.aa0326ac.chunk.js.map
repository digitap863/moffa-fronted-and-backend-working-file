{"version":3,"sources":["pages/other/Otp.js"],"names":["connect","state","user","userData","location","phone","useParams","addToast","useToasts","pathname","history","useHistory","useForm","register","handleSubmit","trigger","errors","formState","useEffect","push","handleClick","a","axios","get","data","appearance","autoDismiss","post","onSubmit","otp","OTP","createStore","rootReducer","load","composeWithDevTools","applyMiddleware","thunk","save","dispatch","fetchUser","window","reload","response","name","content","to","process","headerTop","className","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","autoComplete","type","placeholder","maxLength","required","pattern","value","message","onKeyUp","seconds","minutes","resend"],"mappings":"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","file":"static/js/38.aa0326ac.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport Timer from \"otp-timer\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport rootReducer from \"../../redux/reducers/rootReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { save, load } from \"redux-localstorage-simple\";\r\nimport { fetchUser } from \"../../redux/actions/userAction\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst LoginRegister = ({ location, user }) => {\r\n  const { phone } = useParams();\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n  const handleClick = async () => {\r\n    if (!phone) {\r\n      try {\r\n        const { data } = await axios.get(\"/api/user/resent-otp\");\r\n\r\n        addToast(\"Successfuly Sent\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n      } catch (error) {\r\n        addToast(\"Somthing Went Wrong\", {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    } else {\r\n      try {\r\n        const { data } = await axios.post(\"/api/user/otpLogin\", { phone });\r\n        addToast(\"Successfuly Sent\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n      } catch (error) {\r\n        addToast(\"Somthing Went Wrong\", {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const otp = data.OTP;\r\n    if (phone) {\r\n      try {\r\n        const { data } = await axios.post(`/api/user/otpLogin/${otp}`);\r\n        const store = createStore(\r\n          rootReducer,\r\n          load(),\r\n          composeWithDevTools(applyMiddleware(thunk, save()))\r\n        );\r\n        store.dispatch(fetchUser(data));\r\n        window.location.reload(false);\r\n        addToast(\"logged in successfully\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n      } catch (error) {\r\n        addToast(error.response.data, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    } else {\r\n      try {\r\n        const { data } = await axios.post(`/api/user/register/${otp}`);\r\n        addToast(data, { appearance: \"success\", autoDismiss: true });\r\n        history.push(\"/login-register\");\r\n      } catch (error) {\r\n        addToast(error.response.data, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <Fragment>\r\n        <MetaTags>\r\n          <title>Thepaaki | OTP</title>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"OTP page of thepaaki website\"\r\n          />\r\n        </MetaTags>\r\n        <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>\r\n          Home\r\n        </BreadcrumbsItem>\r\n        <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n          OTP\r\n        </BreadcrumbsItem>\r\n        <LayoutOne headerTop=\"visible\">\r\n          {/* breadcrumb */}\r\n          <Breadcrumb />\r\n          <div className=\"login-register-area pt-100 pb-100\">\r\n            <div className=\"container mt-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\r\n                  <div className=\"login-register-wrapper\">\r\n                    <Tab.Container defaultActiveKey=\"otp\">\r\n                      <Nav variant=\"pills\" className=\"login-register-tab-list\">\r\n                        <Nav.Item>\r\n                          <Nav.Link eventKey=\"otp\">\r\n                            <h4>OTP-VERIFICATION</h4>\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                      <Tab.Content>\r\n                        <Tab.Pane eventKey=\"otp\">\r\n                          <div className=\"login-form-container\">\r\n                            <div className=\"login-register-form\">\r\n                              <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <input\r\n                                  autoComplete=\"off\"\r\n                                  type=\"phoneNumber\"\r\n                                  placeholder=\"Enter 6 Digits OTP \"\r\n                                  maxLength=\"6\"\r\n                                  {...register(\"OTP\", {\r\n                                    required: \"Please Enter OTP\",\r\n                                    pattern: {\r\n                                      value: /^[0-9]{1,6}$/,\r\n                                      message: \"Invalid OTP\",\r\n                                    },\r\n                                  })}\r\n                                  onKeyUp={() => {\r\n                                    trigger(\"OTP\");\r\n                                  }}\r\n                                />\r\n                                {errors.OTP && (\r\n                                  <small className=\"text-danger\">\r\n                                    {errors.OTP.message}\r\n                                  </small>\r\n                                )}\r\n\r\n                                <div className=\"button-box\">\r\n                                  <div className=\"login-toggle-btn\">\r\n                                    {/* <input type=\"checkbox\" />\r\n                                    <label className=\"ml-10\">Remember me</label> */}\r\n                                    <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                                      <Timer\r\n                                        seconds={60}\r\n                                        minutes={0}\r\n                                        resend={handleClick}\r\n                                      />\r\n                                    </Link>\r\n                                  </div>\r\n                                  <button type=\"submit\">\r\n                                    <span>Login</span>\r\n                                  </button>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </Tab.Pane>\r\n                      </Tab.Content>\r\n                    </Tab.Container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LayoutOne>\r\n      </Fragment>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nLoginRegister.propTypes = {\r\n  location: PropTypes.object,\r\n  user: PropTypes.object,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.userData.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginRegister);\r\n"],"sourceRoot":""}